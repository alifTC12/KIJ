/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package multithreadserver;

import java.awt.event.WindowEvent;

/**
 *
 * @author Fathur
 */
public class ServerForm extends javax.swing.JFrame 
{
    private static final long serialVersionUID = 1L;
    /**
     * Creates new form ServerForm
     */
    private MultiThreadServer server;
    
    
    public ServerForm() 
    {
        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        portnumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        startbutton = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatroom = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        eventlog = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        portnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portnumberActionPerformed(evt);
            }
        });

        jLabel1.setText("Port Number:");

        startbutton.setText("Start");
        startbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startbuttonActionPerformed(evt);
            }
        });

        chatroom.setEditable(false);
        chatroom.setColumns(20);
        chatroom.setRows(5);
        jScrollPane1.setViewportView(chatroom);

        jLabel2.setText("Chat Room");

        jLabel3.setText("Events Log");

        eventlog.setEditable(false);
        eventlog.setColumns(20);
        eventlog.setRows(5);
        jScrollPane2.setViewportView(eventlog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(portnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startbutton)))
                        .addGap(0, 128, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(startbutton))
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void portnumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portnumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portnumberActionPerformed

    private void startbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startbuttonActionPerformed
        // TODO add your handling code here:
        //kalau berjalan maka server !=null
        if(server != null) 
        {
		server.stop();
		server = null;
		portnumber.setEditable(true);
		startbutton.setText("Start");
		return;
	}
        // OK start the server	
	int port;
	try 
        {
            port = Integer.parseInt(portnumber.getText().trim());
	}
	catch(Exception er) 
        {
            appendEvent("Invalid port number");
            return;
	}
        
	// ceate a new Server
	server = new MultiThreadServer(port, this);
        //System.out.println("ini adlah port di GUI " + port);
	// and start it as a thread
               
	new ServerRunning().start();
	startbutton.setText("Stop");
	portnumber.setEditable(false);
    }//GEN-LAST:event_startbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    void appendRoom(String str) 
    {
	chatroom.append(str);
        System.out.println("ini messagenya :"+ str);
	//chatroom.setCaretPosition(chatroom.getText().length());
    }
    
    void appendEvent(String str) 
    {
        eventlog.append(str);
	//eventlog.setCaretPosition(chatroom.getText().length());
		
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                new ServerForm().setVisible(true);
            }
        });
       // new ServerForm(1500);
    }
    
    public void windowClosing(WindowEvent e) 
    {
		// if my Server exist
	if(server != null) 
        {
            try {
				server.stop();			// ask the server to close the conection
			}
			catch(Exception eClose) {
			}
			server = null;
		}
		// dispose the frame
		dispose();
		System.exit(0);
    }

    class ServerRunning extends Thread 
    {
		public void run() 
                {
			server.start();     
                        // should execute until if fails
                        
			// the server failed
			startbutton.setText("Start");
			portnumber.setEditable(true);
			appendEvent("Server crashed\n");
                        server = null;
		}
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea chatroom;
    private javax.swing.JTextArea eventlog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField portnumber;
    private javax.swing.JToggleButton startbutton;
    // End of variables declaration//GEN-END:variables
}
